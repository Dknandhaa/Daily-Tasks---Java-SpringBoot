//package com.dataset.web.service;
//
//import org.jsoup.Jsoup;
//import org.jsoup.nodes.Document;
//import org.jsoup.nodes.Element;
//import org.jsoup.select.Elements;
//import org.springframework.stereotype.Service;
//
//import java.util.logging.Logger;
//
//@Service
//public class WebScrapingService {
//
//    private static final Logger logger = Logger.getLogger(WebScrapingService.class.getName());
//
//    public DataModel extractData(String html) {
//        Document doc = Jsoup.parse(html);
//
//        // Extract title
//        String title = doc.select("h3.dataset-heading a").text();
//        logger.info("Extracted title: " + title);
//
//        // Extract description
//        String description = doc.select(".notes > div").text();
//        logger.info("Extracted description: " + description);
//
//        // Extract PDF URL
//        String pdfUrl = null;
//        Elements links = doc.select("a.label-default");
//        for (Element link : links) {
//            if ("pdf".equalsIgnoreCase(link.attr("data-format"))) {
//                pdfUrl = link.attr("href");
//                break;
//            }
//        }
//        logger.info("Extracted PDF URL: " + pdfUrl);
//        System.out.println(title);
//        System.out.println(description);
//        System.out.println(pdfUrl);
//        return new DataModel(title, description, pdfUrl);
//    }
//
//    public static class DataModel {
//        private String title;
//        private String description;
//        private String pdfUrl;
//
//        public DataModel(String title, String description, String pdfUrl) {
//            this.title = title;
//            this.description = description;
//            this.pdfUrl = pdfUrl;
//        }
//
//        // Getters and Setters
//        public String getTitle() {
//            return title;
//        }
//
//        public void setTitle(String title) {
//            this.title = title;
//        }
//
//        public String getDescription() {
//            return description;
//        }
//
//        public void setDescription(String description) {
//            this.description = description;
//        }
//
//        public String getPdfUrl() {
//            return pdfUrl;
//        }
//
//        public void setPdfUrl(String pdfUrl) {
//            this.pdfUrl = pdfUrl;
//        }
//
//        @Override
//        public String toString() {
//            return "DataModel{" +
//                    "title='" + title + '\'' +
//                    ", description='" + description + '\'' +
//                    ", pdfUrl='" + pdfUrl + '\'' +
//                    '}';
//        }
//    }
//}
//
//
////
////import com.dataset.web.repository.datasetRepo;
////import com.dataset.web.model.dataset;
////import org.jsoup.Jsoup;
////import org.jsoup.nodes.Element;
////import org.jsoup.select.Elements;
////import org.springframework.stereotype.Service;
////import org.jsoup.nodes.Document;
////import org.springframework.beans.factory.annotation.Autowired;
////
////import java.io.IOException;
////
////@Service
////public class WebScrapingService {
////
////    @Autowired
////    private datasetRepo pdfInfoRepository;
////
////    public void scrapeWebsite(String url) {
////        try {
////            Document doc = Jsoup.connect(url).get();
////            String title = doc.title();
////            String description = doc.select("meta[name=description]").attr("content");
////            String pdfUrl = doc.select("a[href$=.pdf]").attr("abs:href");
////
////            // Debug log for extracted data
////            System.out.println("Title: " + title);
////            System.out.println("Description: " + description);
////            System.out.println("PDF URL: " + pdfUrl);
////
////            dataset pdfInfo = new dataset();
////            pdfInfo.setPdfName(title);
////            pdfInfo.setDescription(description);
////            pdfInfo.setPdfUrl(pdfUrl);
////
////            pdfInfoRepository.save(pdfInfo);
////        } catch (IOException e) {
////            e.printStackTrace();
////        }
////    }
////
////    public void downloadPdfsFromWebsite(String websiteUrl, String downloadPath) throws IOException {
////        Document document = Jsoup.connect(websiteUrl).get();
////        Elements links = document.select("a[href$=.pdf]"); // Select links ending with .pdf
////
////        for (Element link : links) {
////            String pdfUrl = link.absUrl("href");
////        }
////    }
////}
//
package com.dataset.web.service;

import com.dataset.web.model.ResponseDTO;
import com.dataset.web.model.dataset;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.springframework.stereotype.Service;



import java.io.IOException;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

@Service
public class WebScrapingService implements ScraperService{
//    @Value("#{'${website.urls}'.split(',')}")
    List<String> urls;
    public dataset info;
    @Override
    public Set<ResponseDTO> extractDataFromHtml(String html) {
        return Set.of();
    }

    @Override
    public Set<ResponseDTO> getVehicleByModel(String vehicleModel) {
        //Using a set here to only store unique elements
        Set<ResponseDTO> responseDTOS = new HashSet<>();
        return responseDTOS;
    }

    private void extractData(Set<ResponseDTO> responseDTOS, String url) throws IOException {

        try{

            Document document = Jsoup.connect(url).get();
            Element element = document.getElementById("dataset-heading");
            Elements elements = element.getElementsByTag("h3");

            System.out.println(elements);
//            info.setPdfName();
        }catch (IOException ex){
            ex.printStackTrace();
        }
    }


}